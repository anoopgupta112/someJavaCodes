package dubandCircular;


//question 3
public class questionCode{
	static Node head;
	static Node h1,h2;
	static class Node{
		int data;
		Node next,prev;
		Node(int d){
			this.data = d;
			next = prev = null;
		}
	}
	void devide() {
		if(head == null) {
			System.exit(0);
		}
		if(head.next == head) {
			System.out.print("NA");
		}
		else {
			int n = 0,p=2,q=2;
		    Node temp;
		    temp = head;
		     
		    // Find the length of the list
		    while(temp!=null)
		    {
		        n += 1;
		        temp = temp.next;
		    }
		     
		    // If ration exceeds the actual length
		    if (p + q > n)
		    {
		        System.out.println("-1");
		        return;
		    }
		    temp = head;
		    h1 = head;
		    while(p > 1)
		    {
		        h1 = temp.next;
		        p-= 1;
		    }
		     
		    // second head node after splitting
		    Node h2 = temp.next;
		    temp.next = null;
		}
		
		
	}
	public void push(int new_data) {
		Node temp = head;
		Node newNode = new Node(new_data);
		if(head == null) {
			head = newNode;
			newNode.next = head;
			
		}
		else {
			while(temp.next != head) {
				temp = temp.next;
			}
			temp.next = newNode;
			newNode.next = head;
		}
	}
	void print(Node temp) {
		Node node = temp;
		if(temp != null) {
			do {
				System.out.print(node.data+" ");
				node = node.next;
			}
			while(node != temp);
			
			
		}
	}
	public static void main(String[] args) {
		questionCode list = new questionCode();
		int n = 5;
		int arr[] = {5, 3, 7, 8, 9};
		for(int i = 0;i<n;i++) {
			list.push(arr[i]);
		}
		list.devide();
		System.out.println();
		list.print(h1);
		System.out.println();
		list.print(h2);
		
	}
}
//question 2
/*
public class questionCode {
	Node head = null;
	 Node tail = null;
	 class Node {
	        //write your code here
	        int data;
	        Node next;
	      
	        public Node(int data) {
	            this.data=data;
	           
	          
	        }
	    }

	    // This method will push the input data at the end of the list
	    void push(int data) {
	        //write your code here
	        Node newNode= new Node(data);
	       
	        if(head==null){
	            head=newNode;
	            tail = newNode;  
                newNode.next = head;  
	        }
	        else{
	        	 tail.next = newNode;  
	        	  tail = newNode;  
	        	  tail.next = head;  
	        }
	        newNode.next=head;
	    }
	    void print() {
	        //write your code here
	    	   Node current = head;  
               if(head == null) {  
                  System.exit(0);
               }  
               else {  
                    
                         
            	   do{  
           
                       System.out.print( current.data+" ");  
                       current = current.next;  
                   }while(current != head);  
                   System.out.println();  
              
               }
               reverse(current);
	
}
	    
	    void reverse(Node current) {
	    	if(current.next == head) 
	    	{
	    		System.out.print(current.data+" ");
	    		return;
	    	}
	    	reverse(current.next);
	    	System.out.print(current.data+" ");
	    }
	    public static void main(String[] args) {
	    	questionCode obj = new questionCode();
	    	int n = 0;
	    	int[] arr = {};
	    	for(int i = 0;i<n;i++) {
	    		obj.push(arr[i]);
	    	}
	    	obj.print();
	    }
	    
}
*/
